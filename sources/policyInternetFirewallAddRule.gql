mutation policyInternetFirewallAddRule ( $internetFirewallAddRuleInput:InternetFirewallAddRuleInput! $accountId:ID! ) {
	policy ( accountId:$accountId  ) {
		internetFirewall  {
			addRule ( input:$internetFirewallAddRuleInput   ) {
				rule  {
					audit {
						updatedTime 
						updatedBy 
					}
					rule {
						id 
						name 
						description 
						index 
						section  {
							by
							input
						}

						enabled 
						source  {
							ip
							host {
								by 
								input 
							}
							site {
								by 
								input 
							}
							subnet
							ipRange {
								from 
								to 
							}
							globalIpRange {
								by 
								input 
							}
							networkInterface {
								by 
								input 
							}
							siteNetworkSubnet {
								by 
								input 
							}
							floatingSubnet {
								by 
								input 
							}
							user {
								by 
								input 
							}
							usersGroup {
								by 
								input 
							}
							group {
								by 
								input 
							}
							systemGroup {
								by 
								input 
							}
						}

						connectionOrigin 
						country  {
							by
							input
						}

						device  {
							by
							input
						}

						deviceOS 
						destination  {
							application {
								by 
								input 
							}
							customApp {
								by 
								input 
							}
							appCategory {
								by 
								input 
							}
							customCategory {
								by 
								input 
							}
							sanctionedAppsCategory {
								by 
								input 
							}
							country {
								by 
								input 
							}
							domain
							fqdn
							ip
							subnet
							ipRange {
								from 
								to 
							}
							globalIpRange {
								by 
								input 
							}
							remoteAsn
						}

						service  {
							standard {
								by 
								input 
							}
							custom {
								port 
								portRange  {
									from
									to
								}

								protocol 
							}
						}

						action 
						tracking  {
							event {
								enabled 
							}
							alert {
								enabled 
								frequency 
								subscriptionGroup  {
									by
									input
								}

								webhook  {
									by
									input
								}

								mailingList  {
									by
									input
								}

							}
						}

						schedule  {
							activeOn
							customTimeframePolicySchedule: customTimeframe {
								from 
								to 
							}
							customRecurringPolicySchedule: customRecurring {
								from 
								to 
								days 
							}
						}

						exceptions  {
							name
							source {
								ip 
								host  {
									by
									input
								}

								site  {
									by
									input
								}

								subnet 
								ipRange  {
									from
									to
								}

								globalIpRange  {
									by
									input
								}

								networkInterface  {
									by
									input
								}

								siteNetworkSubnet  {
									by
									input
								}

								floatingSubnet  {
									by
									input
								}

								user  {
									by
									input
								}

								usersGroup  {
									by
									input
								}

								group  {
									by
									input
								}

								systemGroup  {
									by
									input
								}

							}
							deviceOS
							country {
								by 
								input 
							}
							device {
								by 
								input 
							}
							destination {
								application  {
									by
									input
								}

								customApp  {
									by
									input
								}

								appCategory  {
									by
									input
								}

								customCategory  {
									by
									input
								}

								sanctionedAppsCategory  {
									by
									input
								}

								country  {
									by
									input
								}

								domain 
								fqdn 
								ip 
								subnet 
								ipRange  {
									from
									to
								}

								globalIpRange  {
									by
									input
								}

								remoteAsn 
							}
							service {
								standard  {
									by
									input
								}

								custom  {
									port
									portRangeCustomService: portRange {
										from 
										to 
									}
									protocol
								}

							}
							connectionOrigin
						}

					}
					properties
				}

				status 
				errors  {
					errorMessage
					errorCode
				}

			}
		}

	}	
}
